// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graph.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_graph_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_graph_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_graph_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_graph_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_graph_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_graph_2eproto_metadata_getter(int index);
namespace proto {
class EdgeId;
struct EdgeIdDefaultTypeInternal;
extern EdgeIdDefaultTypeInternal _EdgeId_default_instance_;
class Weight;
struct WeightDefaultTypeInternal;
extern WeightDefaultTypeInternal _Weight_default_instance_;
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> ::proto::EdgeId* Arena::CreateMaybeMessage<::proto::EdgeId>(Arena*);
template<> ::proto::Weight* Arena::CreateMaybeMessage<::proto::Weight>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace proto {

// ===================================================================

class EdgeId PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.EdgeId) */ {
 public:
  inline EdgeId() : EdgeId(nullptr) {}
  virtual ~EdgeId();
  explicit constexpr EdgeId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EdgeId(const EdgeId& from);
  EdgeId(EdgeId&& from) noexcept
    : EdgeId() {
    *this = ::std::move(from);
  }

  inline EdgeId& operator=(const EdgeId& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdgeId& operator=(EdgeId&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EdgeId& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdgeId* internal_default_instance() {
    return reinterpret_cast<const EdgeId*>(
               &_EdgeId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EdgeId& a, EdgeId& b) {
    a.Swap(&b);
  }
  inline void Swap(EdgeId* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdgeId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EdgeId* New() const final {
    return CreateMaybeMessage<EdgeId>(nullptr);
  }

  EdgeId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EdgeId>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EdgeId& from);
  void MergeFrom(const EdgeId& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EdgeId* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.EdgeId";
  }
  protected:
  explicit EdgeId(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_graph_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // uint32 data = 1;
  void clear_data();
  ::PROTOBUF_NAMESPACE_ID::uint32 data() const;
  void set_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data() const;
  void _internal_set_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.EdgeId)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_graph_2eproto;
};
// -------------------------------------------------------------------

class Weight PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.Weight) */ {
 public:
  inline Weight() : Weight(nullptr) {}
  virtual ~Weight();
  explicit constexpr Weight(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Weight(const Weight& from);
  Weight(Weight&& from) noexcept
    : Weight() {
    *this = ::std::move(from);
  }

  inline Weight& operator=(const Weight& from) {
    CopyFrom(from);
    return *this;
  }
  inline Weight& operator=(Weight&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Weight& default_instance() {
    return *internal_default_instance();
  }
  static inline const Weight* internal_default_instance() {
    return reinterpret_cast<const Weight*>(
               &_Weight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Weight& a, Weight& b) {
    a.Swap(&b);
  }
  inline void Swap(Weight* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Weight* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Weight* New() const final {
    return CreateMaybeMessage<Weight>(nullptr);
  }

  Weight* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Weight>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Weight& from);
  void MergeFrom(const Weight& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Weight* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.Weight";
  }
  protected:
  explicit Weight(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_graph_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStopCountFieldNumber = 1,
    kWaitTimeFieldNumber = 2,
    kTripTimeFieldNumber = 3,
  };
  // uint32 stopCount = 1;
  void clear_stopcount();
  ::PROTOBUF_NAMESPACE_ID::uint32 stopcount() const;
  void set_stopcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stopcount() const;
  void _internal_set_stopcount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 waitTime = 2;
  void clear_waittime();
  ::PROTOBUF_NAMESPACE_ID::uint32 waittime() const;
  void set_waittime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_waittime() const;
  void _internal_set_waittime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tripTime = 3;
  void clear_triptime();
  ::PROTOBUF_NAMESPACE_ID::uint32 triptime() const;
  void set_triptime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_triptime() const;
  void _internal_set_triptime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.Weight)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stopcount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 waittime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 triptime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_graph_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EdgeId

// uint32 data = 1;
inline void EdgeId::clear_data() {
  data_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EdgeId::_internal_data() const {
  return data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EdgeId::data() const {
  // @@protoc_insertion_point(field_get:proto.EdgeId.data)
  return _internal_data();
}
inline void EdgeId::_internal_set_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_ = value;
}
inline void EdgeId::set_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:proto.EdgeId.data)
}

// -------------------------------------------------------------------

// Weight

// uint32 stopCount = 1;
inline void Weight::clear_stopcount() {
  stopcount_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Weight::_internal_stopcount() const {
  return stopcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Weight::stopcount() const {
  // @@protoc_insertion_point(field_get:proto.Weight.stopCount)
  return _internal_stopcount();
}
inline void Weight::_internal_set_stopcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  stopcount_ = value;
}
inline void Weight::set_stopcount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stopcount(value);
  // @@protoc_insertion_point(field_set:proto.Weight.stopCount)
}

// uint32 waitTime = 2;
inline void Weight::clear_waittime() {
  waittime_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Weight::_internal_waittime() const {
  return waittime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Weight::waittime() const {
  // @@protoc_insertion_point(field_get:proto.Weight.waitTime)
  return _internal_waittime();
}
inline void Weight::_internal_set_waittime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  waittime_ = value;
}
inline void Weight::set_waittime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_waittime(value);
  // @@protoc_insertion_point(field_set:proto.Weight.waitTime)
}

// uint32 tripTime = 3;
inline void Weight::clear_triptime() {
  triptime_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Weight::_internal_triptime() const {
  return triptime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Weight::triptime() const {
  // @@protoc_insertion_point(field_get:proto.Weight.tripTime)
  return _internal_triptime();
}
inline void Weight::_internal_set_triptime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  triptime_ = value;
}
inline void Weight::set_triptime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_triptime(value);
  // @@protoc_insertion_point(field_set:proto.Weight.tripTime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_graph_2eproto
